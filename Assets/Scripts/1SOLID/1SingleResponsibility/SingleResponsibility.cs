using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// 단일 책임 원칙(SRP) : 모듈, 클래스 또는 함수가 오직 한 가지만 책임지며 로직의 특정 부분만 캡슐화할 것을 명시한다.
// 컴포넌트(Component)를 조합하여 게임 오브젝트를 구성하는 것과 같이 한 클래스가 복합적인 기능을 가지지 않게끔 한다.
// 이는 하나의 클래스가 어떤 기능을 가지고 있는지 쉽게 이해할 수 있게 하기 위함이다.

// 단일 책임 원칙의 목표는 다음과 같다.
// - 가독성 : 하나의 클래스에 적당한 길이의 코드를 가지게 하여 읽기 쉽게 한다. 이후 버그 픽스 및 리팩터링 과정에서 용이하게 된다.
// - 확장성 : 간단하게 클래스를 구성하기 때문에 상속화도 간단하게 할 수 있으며 상속화에 문제가 생겼을 시에도 간단하게 수정하여 이를 해결할 수 있게 된다.
// - 재사용성 : 하나의 기능을 갖는 클래스를 조합하는 컴포넌트와 같이 모듈화가 가능하며 다른 오브젝트에서도 사용할 수 있게 된다. (최적화에 도움을 준다)
public class SingleResponsibility : MonoBehaviour
{

}